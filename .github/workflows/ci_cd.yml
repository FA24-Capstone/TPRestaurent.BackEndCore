name: CI/CD Pipeline

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

env:
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '6.0.x'
  DOCKER_IMAGE_NAME: hongquan0312/restaurant
  AZURE_CONTAINER_APP_NAME: thienphurestaurant
  AZURE_RESOURCE_GROUP: TPRestaurentResourceGroup

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Notify Discord - Start CI/CD
        run: |
          START_TIME=$(TZ="Asia/Ho_Chi_Minh" date)
          curl -H "Content-Type: application/json" \
          -d '{
                "content": "@everyone \n\n\
                =============================== \n\n\
                üöÄ **CI/CD Pipeline Started** \n\
                **Start Time:** '"$START_TIME"' (Vietnam Time) \n\
                =============================== \n\n\
                Starting the build process..."
              }' \
          ${{ secrets.DISCORD_WEBHOOK }}

      - name: Checkout Code
        run: echo "Checking out the code..."

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal

    # Notify about build success/failure
      - name: Notify Discord - Build Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
          -d '{"content": "‚úÖ **Build completed successfully**!"}' \
          ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify Discord - Build Failed
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
          -d '{"content": "‚ùå **Build failed**. Please check the logs for more details."}' \
          ${{ secrets.DISCORD_WEBHOOK }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run for the main branch
    steps:
      - uses: actions/checkout@v4

      - name: Checkout Code
        run: echo "Checking out the code for Docker..."

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} -f TPRestaurent.BackEndCore.API/Dockerfile .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} ${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

    # Notify about Docker success/failure
      - name: Notify Discord - Docker Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
          -d '{"content": "‚úÖ **Docker image built and pushed successfully**!"}' \
          ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify Discord - Docker Failed
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
          -d '{"content": "‚ùå **Docker build or push failed**."}' \
          ${{ secrets.DISCORD_WEBHOOK }}

  deploy-to-container-apps:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run for the main branch
    steps:
      - name: Checkout Code
        run: echo "Checking out the code for deployment..."

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          imageToDeploy: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          registryUrl: docker.io
          registryUsername: ${{ secrets.DOCKER_HUB_USERNAME }}
          registryPassword: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          location: 'eastasia'

      - name: Azure logout
        run: az logout
        if: always()

    # Notify about deployment success/failure
      - name: Notify Discord - Deployment Success
        if: success()
        run: |
          END_TIME=$(TZ="Asia/Ho_Chi_Minh" date)
          curl -H "Content-Type: application/json" \
          -d '{
                "content": "@everyone \n\n\
                =============================== \n\n\
                üéâ **Deployment Successful** \n\
                **End Time:** '"$END_TIME"' (Vietnam Time) \n\
                =============================== \n\n\
                The deployment to Azure Container Apps was successful!"
              }' \
          ${{ secrets.DISCORD_WEBHOOK }}


      - name: Notify Discord - Deployment Failed
        if: failure()
        run: |
          END_TIME=$(TZ="Asia/Ho_Chi_Minh" date)
          curl -H "Content-Type: application/json" \
          -d '{
                "content": "@everyone \n\n\
                =============================== \n\n\
                ‚ùå **Deployment Failed** \n\
                **End Time:** '"$END_TIME"' (Vietnam Time) \n\
                =============================== \n\n\
                Please check the logs for more details."
              }' \
          ${{ secrets.DISCORD_WEBHOOK }}

